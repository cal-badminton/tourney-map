{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\src\\\\js\\\\Tile.js\";\nimport React from 'react';\n\nvar Tile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tile, _React$Component);\n\n  function Tile(props) {\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tile).call(this, props));\n    _this.row = props.row;\n    _this.col = props.col;\n    _this.handleClick = props.click;\n    _this.handleDrop = props.drop;\n    _this.handleDrag = _this.handleDrag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDragOver = _this.handleDragOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getStyle = _this.getStyle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"handleDrag\",\n    value: function handleDrag(e) {\n      e.dataTransfer.setData(\"row\", e.target.getAttribute(\"data-row\"));\n      e.dataTransfer.setData(\"col\", e.target.getAttribute(\"data-col\"));\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      if (this.props.highlight === \"red\") {\n        return {\n          backgroundColor: \"#f44242\"\n        };\n      } else if (this.props.highlight === \"green\") {\n        return {\n          backgroundColor: \"#42f442\"\n        };\n      } else if (this.props.highlight === \"blue\") {\n        return {\n          backgroundColor: \"#4242f4\"\n        };\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        onClick: this.handleClick,\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        draggable: \"true\",\n        onDragOver: this.handleDragOver,\n        onDragStart: this.handleDrag,\n        onDrop: this.handleDrop,\n        className: \"grid-tile\",\n        style: this.getStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.info));\n    }\n  }]);\n\n  return Tile;\n}(React.Component);\n\nexport default Tile;","map":{"version":3,"sources":["C:\\Users\\Ryan\\Dropbox\\tourneymap\\client\\src\\js\\Tile.js"],"names":["React","Tile","props","row","col","handleClick","click","handleDrop","drop","handleDrag","bind","handleDragOver","getStyle","e","dataTransfer","setData","target","getAttribute","preventDefault","highlight","backgroundColor","title","info","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,GAAL,GAAWD,KAAK,CAACC,GAAjB;AACA,UAAKC,GAAL,GAAWF,KAAK,CAACE,GAAjB;AACA,UAAKC,WAAL,GAAmBH,KAAK,CAACI,KAAzB;AACA,UAAKC,UAAL,GAAkBL,KAAK,CAACM,IAAxB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,uDAAtB;AACA,UAAKE,QAAL,GAAgB,MAAKA,QAAL,CAAcF,IAAd,uDAAhB;AARiB;AASlB;;;;+BAEUG,C,EAAG;AACZA,MAAAA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,KAAvB,EAA8BF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,UAAtB,CAA9B;AACAJ,MAAAA,CAAC,CAACC,YAAF,CAAeC,OAAf,CAAuB,KAAvB,EAA8BF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,UAAtB,CAA9B;AACD;;;mCAEcJ,C,EAAG;AAChBA,MAAAA,CAAC,CAACK,cAAF;AACD;;;+BAEU;AACT,UAAI,KAAKhB,KAAL,CAAWiB,SAAX,KAAyB,KAA7B,EAAoC;AAClC,eAAO;AACLC,UAAAA,eAAe,EAAE;AADZ,SAAP;AAGD,OAJD,MAIO,IAAI,KAAKlB,KAAL,CAAWiB,SAAX,KAAyB,OAA7B,EAAsC;AAC3C,eAAO;AACLC,UAAAA,eAAe,EAAE;AADZ,SAAP;AAGD,OAJM,MAIA,IAAI,KAAKlB,KAAL,CAAWiB,SAAX,KAAyB,MAA7B,EAAqC;AAC1C,eAAO;AACLC,UAAAA,eAAe,EAAE;AADZ,SAAP;AAGD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,OAAO,EAAE,KAAKf,WAAnB;AAAgC,oBAAU,KAAKF,GAA/C;AAAoD,oBAAU,KAAKC,GAAnE;AAAwE,QAAA,SAAS,EAAC,MAAlF;AAAyF,QAAA,UAAU,EAAE,KAAKO,cAA1G;AACE,QAAA,WAAW,EAAE,KAAKF,UADpB;AACgC,QAAA,MAAM,EAAE,KAAKF,UAD7C;AACyD,QAAA,SAAS,EAAC,WADnE;AAC+E,QAAA,KAAK,EAAE,KAAKK,QAAL,EADtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,oBAAU,KAAKT,GAApB;AAAyB,oBAAU,KAAKC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWmB,KADd,CAFF,EAKE;AAAK,oBAAU,KAAKlB,GAApB;AAAyB,oBAAU,KAAKC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWoB,IADd,CALF,CADF;AAWD;;;;EAjDgBtB,KAAK,CAACuB,S;;AAoDzB,eAAetB,IAAf","sourcesContent":["import React from 'react';\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.row = props.row;\n    this.col = props.col;\n    this.handleClick = props.click;\n    this.handleDrop = props.drop;\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.getStyle = this.getStyle.bind(this);\n  }\n\n  handleDrag(e) {\n    e.dataTransfer.setData(\"row\", e.target.getAttribute(\"data-row\"));\n    e.dataTransfer.setData(\"col\", e.target.getAttribute(\"data-col\"));\n  }\n\n  handleDragOver(e) {\n    e.preventDefault();\n  }\n\n  getStyle() {\n    if (this.props.highlight === \"red\") {\n      return {\n        backgroundColor: \"#f44242\"\n      };\n    } else if (this.props.highlight === \"green\") {\n      return {\n        backgroundColor: \"#42f442\"\n      };\n    } else if (this.props.highlight === \"blue\") {\n      return {\n        backgroundColor: \"#4242f4\"\n      };\n    }\n  }\n\n  render() {\n    return (\n      <div onClick={this.handleClick} data-row={this.row} data-col={this.col} draggable=\"true\" onDragOver={this.handleDragOver}\n        onDragStart={this.handleDrag} onDrop={this.handleDrop} className=\"grid-tile\" style={this.getStyle()}>\n        <div data-row={this.row} data-col={this.col}>\n          {this.props.title }\n        </div>\n        <div data-row={this.row} data-col={this.col}>\n          {this.props.info}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tile\n"]},"metadata":{},"sourceType":"module"}