{"ast":null,"code":"import _classCallCheck from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js\";\nimport React from 'react';\nimport Tile from './Tourney.js';\n\nvar Tourney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tourney, _React$Component);\n\n  function Tourney(props) {\n    var _this;\n\n    _classCallCheck(this, Tourney);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tourney).call(this, props));\n    console.log(props.id);\n    _this.id = atob(props.id);\n    _this.createRow = _this.createRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTile = _this.renderTile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      map: []\n    };\n    props.socket.emit('get tourney', _this.id);\n    props.socket.on('update tourney', function (data) {\n      if (this.mounted) {\n        console.log(data);\n        this.setState({\n          map: data.map\n        });\n      }\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Tourney, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"createRow\",\n    value: function createRow() {\n      var row = [];\n\n      for (var i = 0; i < 10; i++) {\n        row.push(this.renderTile(i));\n      }\n\n      return row;\n    }\n  }, {\n    key: \"renderTile\",\n    value: function renderTile(n) {\n      return React.createElement(Tile, {\n        key: n,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.id), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.createRow()));\n    }\n  }]);\n\n  return Tourney;\n}(React.Component);\n\nexport default Tourney;","map":{"version":3,"sources":["/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js"],"names":["React","Tile","Tourney","props","console","log","id","atob","createRow","bind","renderTile","state","map","socket","emit","on","data","mounted","setState","row","i","push","n","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,EAAlB;AACA,UAAKA,EAAL,GAAUC,IAAI,CAACJ,KAAK,CAACG,EAAP,CAAd;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBD,IAAhB,uDAAlB;AACA,UAAKE,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAIAT,IAAAA,KAAK,CAACU,MAAN,CAAaC,IAAb,CAAkB,aAAlB,EAAiC,MAAKR,EAAtC;AAEAH,IAAAA,KAAK,CAACU,MAAN,CAAaE,EAAb,CAAgB,gBAAhB,EAAkC,UAASC,IAAT,EAAe;AAC/C,UAAI,KAAKC,OAAT,EAAkB;AAChBb,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACA,aAAKE,QAAL,CAAc;AAACN,UAAAA,GAAG,EAAEI,IAAI,CAACJ;AAAX,SAAd;AACD;AACF,KALiC,CAKhCH,IALgC,uDAAlC;AAZiB;AAkBlB;;;;wCAEmB;AAClB,WAAKQ,OAAL,GAAe,IAAf;AACD;;;2CAEsB;AACrB,WAAKA,OAAL,GAAe,KAAf;AACD;;;gCAEW;AACV,UAAIE,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,QAAAA,GAAG,CAACE,IAAJ,CAAS,KAAKX,UAAL,CAAgBU,CAAhB,CAAT;AACD;;AACD,aAAOD,GAAP;AACD;;;+BAEUG,C,EAAG;AACZ,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKnB,KAAL,CAAWG,EAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKE,SAAL,EAAN,CAFF,CADF;AAMD;;;;EAhDmBR,KAAK,CAACuB,S;;AAmD5B,eAAerB,OAAf","sourcesContent":["import React from 'react';\r\nimport Tile from './Tourney.js';\r\n\r\nclass Tourney extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.id);\r\n    this.id = atob(props.id);\r\n    this.createRow = this.createRow.bind(this);\r\n    this.renderTile = this.renderTile.bind(this);\r\n    this.state = {\r\n      map: []\r\n    };\r\n\r\n    props.socket.emit('get tourney', this.id);\r\n\r\n    props.socket.on('update tourney', function(data) {\r\n      if (this.mounted) {\r\n        console.log(data);\r\n        this.setState({map: data.map});\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  createRow() {\r\n    let row = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      row.push(this.renderTile(i));\r\n    }\r\n    return row;\r\n  }\r\n\r\n  renderTile(n) {\r\n    return <Tile key={n} />\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>{this.props.id}</p>\r\n        <div>{this.createRow()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tourney;\r\n"]},"metadata":{},"sourceType":"module"}