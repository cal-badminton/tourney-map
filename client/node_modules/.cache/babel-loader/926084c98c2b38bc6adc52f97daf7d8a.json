{"ast":null,"code":"import _classCallCheck from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js\";\nimport React from 'react';\nimport Tile from './Tile.js';\n\nvar Tourney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tourney, _React$Component);\n\n  function Tourney(props) {\n    var _this;\n\n    _classCallCheck(this, Tourney);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tourney).call(this, props));\n    _this.id = atob(props.id);\n    _this.createRow = _this.createRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createMap = _this.createMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateMap = _this.updateMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTile = _this.renderTile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.makeTile = _this.makeTile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.map = null;\n    _this.state = {\n      map: []\n    };\n    props.socket.emit('get tourney', _this.id);\n    props.socket.on('load tourney', function (data) {\n      if (this.mounted) {\n        console.log(data);\n        this.updateMap(data.map);\n      }\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Tourney, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var map = [];\n\n      for (var i = 0; i < 10; i++) {\n        map.push(this.createRow(i));\n      }\n\n      this.map = map;\n      return map;\n    }\n  }, {\n    key: \"createRow\",\n    value: function createRow(n) {\n      var row = [];\n\n      for (var i = 0; i < 18; i++) {\n        row.push(React.createElement(Tile, {\n          drop: this.handleDrop,\n          key: i + 100 * n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      }\n\n      var out = [];\n      out.push(React.createElement(\"div\", {\n        className: \"grid-row\",\n        key: 1000 * n,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, row));\n      return out;\n    }\n  }, {\n    key: \"updateMap\",\n    value: function updateMap(newMap) {\n      for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 18; j++) {\n          if (newMap[i][j] === null) {\n            this.map[i][j] = this.makeTile(null, null, null, null);\n          } else {\n            var type = newMap[i][j][0];\n            var title = newMap[i][j][1];\n            var info = newMap[i][j][2];\n            var highlight = newMap[i][j][3];\n            this.map[i][j] = this.makeTile(type, title, info, highlight);\n          }\n        }\n      }\n\n      this.setState({\n        map: newMap\n      });\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(e) {\n      console.log(\"hellooo\");\n      console.log(e.dataTransfer.getData(\"title\"));\n    }\n  }, {\n    key: \"makeTile\",\n    value: function makeTile(type, title, info, highlight) {\n      return React.createElement(Tile, {\n        type: type,\n        title: title,\n        info: info,\n        highlight: highlight,\n        drop: this.handleDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderTile\",\n    value: function renderTile(n) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Tile, {\n        drop: this.handleDrop,\n        key: n,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"tourney\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tourney-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.id), React.createElement(\"div\", {\n        className: \"tourney-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tourney-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.createMap())));\n    }\n  }]);\n\n  return Tourney;\n}(React.Component);\n\nexport default Tourney;","map":{"version":3,"sources":["/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js"],"names":["React","Tile","Tourney","props","id","atob","createRow","bind","createMap","updateMap","renderTile","makeTile","handleDrop","map","state","socket","emit","on","data","mounted","console","log","i","push","n","row","out","newMap","j","type","title","info","highlight","setState","e","dataTransfer","getData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Tile from './Tile.js';\r\n\r\nclass Tourney extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = atob(props.id);\r\n    this.createRow = this.createRow.bind(this);\r\n    this.createMap = this.createMap.bind(this);\r\n    this.updateMap = this.updateMap.bind(this);\r\n    this.renderTile = this.renderTile.bind(this);\r\n    this.makeTile = this.makeTile.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.map = null;\r\n    this.state = {\r\n      map: []\r\n    };\r\n\r\n    props.socket.emit('get tourney', this.id);\r\n\r\n    props.socket.on('load tourney', function(data) {\r\n      if (this.mounted) {\r\n        console.log(data);\r\n        this.updateMap(data.map);\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  createMap() {\r\n    let map = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      map.push(this.createRow(i));\r\n    }\r\n    this.map = map;\r\n    return map;\r\n  }\r\n\r\n  createRow(n) {\r\n    let row = [];\r\n    for (let i = 0; i < 18; i++) {\r\n      row.push(<Tile drop={this.handleDrop} key={i + 100 * n} />);\r\n    }\r\n    let out = []\r\n    out.push(<div className=\"grid-row\" key={1000 * n}>{row}</div>);\r\n    return out;\r\n  }\r\n\r\n  updateMap(newMap) {\r\n    for (let i = 0; i < 10; i++) {\r\n      for (let j = 0; j < 18; j++) {\r\n        if (newMap[i][j] === null) {\r\n          this.map[i][j] = this.makeTile(null, null, null, null);\r\n        } else {\r\n          let type = newMap[i][j][0];\r\n          let title = newMap[i][j][1];\r\n          let info = newMap[i][j][2];\r\n          let highlight = newMap[i][j][3];\r\n          this.map[i][j] = this.makeTile(type, title, info, highlight);\r\n        }\r\n      }\r\n    }\r\n    this.setState({map: newMap});\r\n  }\r\n\r\n  handleDrop(e) {\r\n    console.log(\"hellooo\");\r\n    console.log(e.dataTransfer.getData(\"title\"));\r\n  }\r\n\r\n  makeTile(type, title, info, highlight) {\r\n    return (\r\n      <Tile type={type} title={title} info={info} highlight={highlight} drop={this.handleDrop} />\r\n    )\r\n  }\r\n\r\n  renderTile(n) {\r\n    return (\r\n      <div>\r\n        <Tile drop={this.handleDrop} key={n} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tourney\">\r\n        <div className=\"tourney-menu\">{this.id}</div>\r\n        <div className=\"tourney-display\">\r\n          <div className=\"tourney-grid\">{this.createMap()}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tourney;\r\n"]},"metadata":{},"sourceType":"module"}