{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\src\\\\js\\\\Tourney.js\";\nimport React from 'react';\nimport Tile from './Tile.js';\n\nvar Tourney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tourney, _React$Component);\n\n  function Tourney(props) {\n    var _this;\n\n    _classCallCheck(this, Tourney);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tourney).call(this, props));\n    _this.id = atob(props.id);\n    _this.createRow = _this.createRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createMap = _this.createMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderTile = _this.renderTile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      map: []\n    };\n    props.socket.emit('get tourney', _this.id);\n    props.socket.on('update tourney', function (data) {\n      if (this.mounted) {\n        console.log(data);\n        this.setState({\n          map: data.map\n        });\n      }\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Tourney, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var map = [];\n\n      for (var i = 0; i < 10; i++) {\n        map.push(this.createRow(i));\n      }\n\n      return map;\n    }\n  }, {\n    key: \"createRow\",\n    value: function createRow(n) {\n      var row = [];\n\n      for (var i = 0; i < 18; i++) {\n        row.push(React.createElement(Tile, {\n          key: i + 100 * n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }));\n      }\n\n      var out = [];\n      out.push(React.createElement(\"div\", {\n        className: \"grid-row\",\n        key: 1000 * n,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, row));\n      return out;\n    }\n  }, {\n    key: \"renderTile\",\n    value: function renderTile(n) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Tile, {\n        key: n,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"tourney\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tourney-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.id), React.createElement(\"div\", {\n        className: \"tourney-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.createMap()));\n    }\n  }]);\n\n  return Tourney;\n}(React.Component);\n\nexport default Tourney;","map":{"version":3,"sources":["C:\\Users\\Ryan\\Dropbox\\tourneymap\\client\\src\\js\\Tourney.js"],"names":["React","Tile","Tourney","props","id","atob","createRow","bind","createMap","renderTile","state","map","socket","emit","on","data","mounted","console","log","setState","i","push","n","row","out","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,EAAL,GAAUC,IAAI,CAACF,KAAK,CAACC,EAAP,CAAd;AACA,UAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,uDAAjB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AACA,UAAKG,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAIAR,IAAAA,KAAK,CAACS,MAAN,CAAaC,IAAb,CAAkB,aAAlB,EAAiC,MAAKT,EAAtC;AAEAD,IAAAA,KAAK,CAACS,MAAN,CAAaE,EAAb,CAAgB,gBAAhB,EAAkC,UAASC,IAAT,EAAe;AAC/C,UAAI,KAAKC,OAAT,EAAkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAKI,QAAL,CAAc;AAACR,UAAAA,GAAG,EAAEI,IAAI,CAACJ;AAAX,SAAd;AACD;AACF,KALiC,CAKhCJ,IALgC,uDAAlC;AAZiB;AAkBlB;;;;wCAEmB;AAClB,WAAKS,OAAL,GAAe,IAAf;AACD;;;2CAEsB;AACrB,WAAKA,OAAL,GAAe,KAAf;AACD;;;gCAEW;AACV,UAAIL,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BT,QAAAA,GAAG,CAACU,IAAJ,CAAS,KAAKf,SAAL,CAAec,CAAf,CAAT;AACD;;AACD,aAAOT,GAAP;AACD;;;8BAESW,C,EAAG;AACX,UAAIC,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BG,QAAAA,GAAG,CAACF,IAAJ,CAAS,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAED,CAAC,GAAG,MAAME,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACD;;AACD,UAAIE,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACH,IAAJ,CAAS;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAE,OAAOC,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CC,GAA1C,CAAT;AACA,aAAOC,GAAP;AACD;;;+BAEUF,C,EAAG;AACZ,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKlB,EAApC,CADF,EAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKI,SAAL,EAA/B,CAFF,CADF;AAMD;;;;EA9DmBR,KAAK,CAACyB,S;;AAiE5B,eAAevB,OAAf","sourcesContent":["import React from 'react';\r\nimport Tile from './Tile.js';\r\n\r\nclass Tourney extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = atob(props.id);\r\n    this.createRow = this.createRow.bind(this);\r\n    this.createMap = this.createMap.bind(this);\r\n    this.renderTile = this.renderTile.bind(this);\r\n    this.state = {\r\n      map: []\r\n    };\r\n\r\n    props.socket.emit('get tourney', this.id);\r\n\r\n    props.socket.on('update tourney', function(data) {\r\n      if (this.mounted) {\r\n        console.log(data);\r\n        this.setState({map: data.map});\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  createMap() {\r\n    let map = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      map.push(this.createRow(i));\r\n    }\r\n    return map;\r\n  }\r\n\r\n  createRow(n) {\r\n    let row = [];\r\n    for (let i = 0; i < 18; i++) {\r\n      row.push(<Tile key={i + 100 * n} />);\r\n    }\r\n    let out = []\r\n    out.push(<div className=\"grid-row\" key={1000 * n}>{row}</div>);\r\n    return out;\r\n  }\r\n\r\n  renderTile(n) {\r\n    return (\r\n      <div>\r\n        <Tile key={n} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tourney\">\r\n        <div className=\"tourney-menu\">{this.id}</div>\r\n        <div className=\"tourney-grid\">{this.createMap()}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tourney;\r\n"]},"metadata":{},"sourceType":"module"}