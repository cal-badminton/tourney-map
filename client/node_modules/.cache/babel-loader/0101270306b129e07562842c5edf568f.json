{"ast":null,"code":"import _classCallCheck from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ryan/Dropbox/tourneymap/client/src/js/Menu.js\";\nimport React from 'react';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props));\n    _this.state = {\n      input: \"\"\n    };\n    _this.messages = [];\n    props.socket.on(\"receive message\", function (data) {\n      if (this.mounted) {\n        this.messages.unshift(data.message);\n\n        if (this.messages.length > 8) {\n          this.messages.pop();\n        }\n\n        console.log(this.messages);\n      }\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    _this.getInfo = _this.getInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.typeChange = _this.typeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.titleChange = _this.titleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.infoChange = _this.infoChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.highlightChange = _this.highlightChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getMessages = _this.getMessages.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleKey = _this.handleKey.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"titleChange\",\n    value: function titleChange(e) {\n      this.props.updateTile(this.props.row, this.props.col, this.props.type, e.target.value, this.props.info, this.props.highlight);\n    }\n  }, {\n    key: \"typeChange\",\n    value: function typeChange(e) {\n      this.props.updateTile(this.props.row, this.props.col, e.target.value, this.props.title, \"\", this.props.highlight);\n    }\n  }, {\n    key: \"infoChange\",\n    value: function infoChange(e) {\n      this.props.updateTile(this.props.row, this.props.col, this.props.type, this.props.title, e.target.value, this.props.highlight);\n    }\n  }, {\n    key: \"highlightChange\",\n    value: function highlightChange(e) {\n      this.props.updateTile(this.props.row, this.props.col, this.props.type, this.props.title, this.props.info, e.target.value);\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo() {\n      if (this.props.type === \"text\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"menu-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Info:\"), React.createElement(\"input\", {\n          type: \"text\",\n          value: this.props.info,\n          onChange: this.infoChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      messages = [];\n\n      for (var i = 0; i < this.messages.length; i++) {\n        mesages;\n      }\n\n      return messages;\n    }\n  }, {\n    key: \"handleKey\",\n    value: function handleKey(event) {\n      if (event.key == 'Enter') {\n        this.props.socket.emit(\"send message\", {\n          name: this.props.name,\n          message: this.state.input\n        });\n        this.setState({\n          input: \"\"\n        });\n      }\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      this.setState({\n        input: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"tourney-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tourney-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.props.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"menu-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Type:\"), React.createElement(\"select\", {\n        value: this.props.type,\n        onChange: this.typeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Blank\"), React.createElement(\"option\", {\n        value: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Text\"), React.createElement(\"option\", {\n        value: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Timer\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"menu-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Title:\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.props.title,\n        onChange: this.titleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.getInfo()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"menu-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Highlight:\"), React.createElement(\"select\", {\n        value: this.props.highlight,\n        onChange: this.highlightChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"None\"), React.createElement(\"option\", {\n        value: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Red\"), React.createElement(\"option\", {\n        value: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Green\"), React.createElement(\"option\", {\n        value: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Blue\"), React.createElement(\"option\", {\n        value: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Yellow\"), React.createElement(\"option\", {\n        value: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Orange\"))), React.createElement(\"div\", {\n        className: \"chat-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.getMessages()), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.input,\n        onChange: this.handleInput,\n        onKeyPress: this.handleKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nexport default Menu;","map":{"version":3,"sources":["/Users/ryan/Dropbox/tourneymap/client/src/js/Menu.js"],"names":["React","Menu","props","state","input","messages","socket","on","data","mounted","unshift","message","length","pop","console","log","bind","getInfo","typeChange","titleChange","infoChange","highlightChange","getMessages","handleKey","handleInput","e","updateTile","row","col","type","target","value","info","highlight","title","i","mesages","event","key","emit","name","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      input: \"\"\r\n    };\r\n\r\n    this.messages = []\r\n\r\n    props.socket.on(\"receive message\", function(data) {\r\n      if (this.mounted) {\r\n        this.messages.unshift(data.message);\r\n        if (this.messages.length > 8) {\r\n          this.messages.pop();\r\n        }\r\n        console.log(this.messages);\r\n      }\r\n    }.bind(this));\r\n\r\n    this.getInfo = this.getInfo.bind(this);\r\n\r\n    this.typeChange = this.typeChange.bind(this);\r\n    this.titleChange = this.titleChange.bind(this);\r\n    this.infoChange = this.infoChange.bind(this);\r\n    this.highlightChange = this.highlightChange.bind(this);\r\n    this.getMessages = this.getMessages.bind(this);\r\n    this.handleKey = this.handleKey.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  titleChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, this.props.type, e.target.value,\r\n      this.props.info, this.props.highlight);\r\n  }\r\n\r\n  typeChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, e.target.value, this.props.title,\r\n      \"\", this.props.highlight);\r\n  }\r\n\r\n  infoChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, this.props.type, this.props.title,\r\n      e.target.value, this.props.highlight);\r\n  }\r\n\r\n  highlightChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, this.props.type, this.props.title,\r\n      this.props.info, e.target.value);\r\n  }\r\n\r\n  getInfo() {\r\n    if (this.props.type === \"text\") {\r\n      return (\r\n        <div>\r\n          <p className=\"menu-text\">Info:</p>\r\n          <input type=\"text\" value={this.props.info} onChange={this.infoChange}/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getMessages() {\r\n    messages = [];\r\n    for (let i = 0; i < this.messages.length; i++) {\r\n        mesages\r\n    }\r\n    return messages;\r\n  }\r\n\r\n  handleKey(event) {\r\n    if (event.key == 'Enter') {\r\n      this.props.socket.emit(\"send message\", {name: this.props.name, message: this.state.input});\r\n      this.setState({input: \"\"});\r\n    }\r\n  }\r\n\r\n  handleInput(e) {\r\n    this.setState({input: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tourney-menu\">\r\n        <div className=\"tourney-name\">{this.props.name}</div>\r\n        <div>\r\n          <p className=\"menu-text\">Type:</p>\r\n          <select value={this.props.type} onChange={this.typeChange}>\r\n            <option value=\"\">Blank</option>\r\n            <option value=\"text\">Text</option>\r\n            <option value=\"timer\">Timer</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <p className=\"menu-text\">Title:</p>\r\n          <input type=\"text\" value={this.props.title} onChange={this.titleChange}/>\r\n        </div>\r\n        <div>{this.getInfo()}</div>\r\n        <div>\r\n          <p className=\"menu-text\">Highlight:</p>\r\n          <select value={this.props.highlight} onChange={this.highlightChange}>\r\n            <option value=\"\">None</option>\r\n            <option value=\"red\">Red</option>\r\n            <option value=\"green\">Green</option>\r\n            <option value=\"blue\">Blue</option>\r\n            <option value=\"yellow\">Yellow</option>\r\n            <option value=\"orange\">Orange</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"chat-box\">\r\n          <div>{this.getMessages()}</div>\r\n          <input type=\"text\" value={this.state.input}\r\n            onChange={this.handleInput} onKeyPress={this.handleKey}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}