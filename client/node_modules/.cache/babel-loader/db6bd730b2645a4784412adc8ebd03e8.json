{"ast":null,"code":"import _classCallCheck from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js\";\nimport React from 'react';\nimport Tile from './Tourney.js';\n\nvar Tourney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tourney, _React$Component);\n\n  function Tourney(props) {\n    var _this;\n\n    _classCallCheck(this, Tourney);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tourney).call(this, props));\n    _this.id = atob(props.id);\n    _this.renderTile = _this.renderTile.bind(_this.renderTile);\n    _this.state = {\n      map: []\n    };\n    props.socket.emit('get tourney', _this.id);\n    props.socket.on('update tourney', function (data) {\n      if (this.mounted) {\n        console.log(data);\n        this.setState({\n          map: data.map\n        });\n      }\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Tourney, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var map = [];\n\n      for (var i = 0; i < 10; i++) {\n        var tiles = [];\n\n        for (var j = 0; j < 20; j++) {\n          tiles.push(React.createElement(Tile, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }));\n        }\n\n        map.push(React.createElement(\"div\", {\n          className: \"grid-row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, tiles));\n      }\n\n      return map;\n    }\n  }, {\n    key: \"renderTile\",\n    value: function renderTile(n) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.id), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" \", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(function (i) {\n        return _this2.renderTile(i);\n      }), \" \"));\n    }\n  }]);\n\n  return Tourney;\n}(React.Component);\n\nexport default Tourney;","map":{"version":3,"sources":["/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js"],"names":["React","Tile","Tourney","props","id","atob","renderTile","bind","state","map","socket","emit","on","data","mounted","console","log","setState","i","tiles","j","push","n","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,EAAL,GAAUC,IAAI,CAACF,KAAK,CAACC,EAAP,CAAd;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,CAAqB,MAAKD,UAA1B,CAAlB;AACA,UAAKE,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE;AADM,KAAb;AAIAN,IAAAA,KAAK,CAACO,MAAN,CAAaC,IAAb,CAAkB,aAAlB,EAAiC,MAAKP,EAAtC;AAEAD,IAAAA,KAAK,CAACO,MAAN,CAAaE,EAAb,CAAgB,gBAAhB,EAAkC,UAASC,IAAT,EAAe;AAC/C,UAAI,KAAKC,OAAT,EAAkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAKI,QAAL,CAAc;AAACR,UAAAA,GAAG,EAAEI,IAAI,CAACJ;AAAX,SAAd;AACD;AACF,KALiC,CAKhCF,IALgC,uDAAlC;AAViB;AAgBlB;;;;wCAEmB;AAClB,WAAKO,OAAL,GAAe,IAAf;AACD;;;2CAEsB;AACrB,WAAKA,OAAL,GAAe,KAAf;AACD;;;gCAEW;AACV,UAAIL,GAAG,GAAG,EAAV;;AACA,WAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,YAAIC,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,UAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACDZ,QAAAA,GAAG,CAACY,IAAJ,CAAS;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BF,KAA3B,CAAT;AACD;;AACD,aAAOV,GAAP;AACD;;;+BAEUa,C,EAAG,CAEb;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKnB,KAAL,CAAWC,EAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BK,GAA/B,CAAmC,UAAAS,CAAC,EAAI;AAC7C,eAAO,MAAI,CAACZ,UAAL,CAAgBY,CAAhB,CAAP;AACD,OAFM,CAAP,MAFF,CADF;AAQD;;;;EApDmBlB,KAAK,CAACuB,S;;AAuD5B,eAAerB,OAAf","sourcesContent":["import React from 'react';\r\nimport Tile from './Tourney.js';\r\n\r\nclass Tourney extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = atob(props.id);\r\n    this.renderTile = this.renderTile.bind(this.renderTile);\r\n    this.state = {\r\n      map: []\r\n    };\r\n\r\n    props.socket.emit('get tourney', this.id);\r\n\r\n    props.socket.on('update tourney', function(data) {\r\n      if (this.mounted) {\r\n        console.log(data);\r\n        this.setState({map: data.map});\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  createMap() {\r\n    let map = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      let tiles = [];\r\n      for (let j = 0; j < 20; j++) {\r\n        tiles.push(<Tile />);\r\n      }\r\n      map.push(<div className=\"grid-row\">{tiles}</div>);\r\n    }\r\n    return map;\r\n  }\r\n\r\n  renderTile(n) {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>{this.props.id}</p>\r\n        <div> {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(i => {\r\n          return this.renderTile(i);\r\n        })} </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tourney;\r\n"]},"metadata":{},"sourceType":"module"}