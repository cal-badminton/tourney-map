{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\src\\\\js\\\\Tile.js\";\nimport React from 'react';\n\nvar Tile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tile, _React$Component);\n\n  function Tile(props) {\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tile).call(this, props));\n    _this.row = props.row;\n    _this.col = props.col;\n    _this.handleClick = props.click;\n    _this.handleDrop = props.drop;\n    _this.handleDrag = _this.handleDrag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDragOver = _this.handleDragOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getStyle = _this.getStyle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getInfo = _this.getInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleTimer = _this.toggleTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.resetTimer = _this.resetTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      time: 0\n    };\n    props.socket.on('update timer', function (data) {\n      if (this.mounted) {\n        var key = \"\" + this.row + props.name + this.col;\n\n        if (key === data.key) {\n          this.setState({\n            time: data.time\n          });\n        }\n      }\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"handleDrag\",\n    value: function handleDrag(e) {\n      e.dataTransfer.setData(\"row\", e.target.getAttribute(\"data-row\"));\n      e.dataTransfer.setData(\"col\", e.target.getAttribute(\"data-col\"));\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      if (this.props.highlight === \"red\") {\n        return {\n          backgroundColor: \"#f44242\"\n        };\n      } else if (this.props.highlight === \"green\") {\n        return {\n          backgroundColor: \"#42f442\"\n        };\n      } else if (this.props.highlight === \"blue\") {\n        return {\n          backgroundColor: \"#427cf4\"\n        };\n      } else if (this.props.highlight === \"yellow\") {\n        return {\n          backgroundColor: \"#f4f442\"\n        };\n      } else if (this.props.highlight === \"orange\") {\n        return {\n          backgroundColor: \"#f47a42\"\n        };\n      }\n    }\n  }, {\n    key: \"toggleTimer\",\n    value: function toggleTimer() {\n      this.props.socket.emit(\"toggle timer\", {\n        name: this.props.name,\n        row: this.row,\n        col: this.col\n      });\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      this.props.socket.emit(\"reset timer\", {\n        name: this.props.name,\n        row: this.row,\n        col: this.col\n      });\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo() {\n      if (this.props.type === \"timer\") {\n        return React.createElement(\"div\", {\n          \"data-row\": this.row,\n          \"data-col\": this.col,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, this.state.time, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          \"data-row\": this.row,\n          \"data-col\": this.col,\n          className: \"timer-button\",\n          type: \"button\",\n          onClick: this.toggleTimer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"S/P\"), React.createElement(\"button\", {\n          \"data-row\": this.row,\n          \"data-col\": this.col,\n          className: \"timer-button\",\n          type: \"button\",\n          onClick: this.resetTimer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"R\")));\n      } else {\n        return this.props.info;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        onClick: this.handleClick,\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        draggable: \"true\",\n        onDragOver: this.handleDragOver,\n        onDragStart: this.handleDrag,\n        onDrop: this.handleDrop,\n        className: \"grid-tile\",\n        style: this.getStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tile-title\",\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.getInfo()));\n    }\n  }]);\n\n  return Tile;\n}(React.Component);\n\nexport default Tile;","map":{"version":3,"sources":["C:\\Users\\Ryan\\Dropbox\\tourneymap\\client\\src\\js\\Tile.js"],"names":["React","Tile","props","row","col","handleClick","click","handleDrop","drop","handleDrag","bind","handleDragOver","getStyle","getInfo","toggleTimer","resetTimer","state","time","socket","on","data","mounted","key","name","setState","e","dataTransfer","setData","target","getAttribute","preventDefault","highlight","backgroundColor","emit","type","info","title","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.row = props.row;\n    this.col = props.col;\n    this.handleClick = props.click;\n    this.handleDrop = props.drop;\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.getStyle = this.getStyle.bind(this);\n    this.getInfo = this.getInfo.bind(this);\n    this.toggleTimer = this.toggleTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n\n    this.state = {\n      time: 0\n    };\n\n    props.socket.on('update timer', function(data) {\n      if (this.mounted) {\n        let key = \"\" + this.row + props.name + this.col;\n        if (key === data.key) {\n          this.setState({time: data.time})\n        }\n      }\n    }.bind(this));\n  }\n\n  handleDrag(e) {\n    e.dataTransfer.setData(\"row\", e.target.getAttribute(\"data-row\"));\n    e.dataTransfer.setData(\"col\", e.target.getAttribute(\"data-col\"));\n  }\n\n  handleDragOver(e) {\n    e.preventDefault();\n  }\n\n  getStyle() {\n    if (this.props.highlight === \"red\") {\n      return {\n        backgroundColor: \"#f44242\"\n      };\n    } else if (this.props.highlight === \"green\") {\n      return {\n        backgroundColor: \"#42f442\"\n      };\n    } else if (this.props.highlight === \"blue\") {\n      return {\n        backgroundColor: \"#427cf4\"\n      };\n    } else if (this.props.highlight === \"yellow\") {\n      return {\n        backgroundColor: \"#f4f442\"\n      };\n    } else if (this.props.highlight === \"orange\") {\n      return {\n        backgroundColor: \"#f47a42\"\n      };\n    }\n  }\n\n  toggleTimer() {\n    this.props.socket.emit(\"toggle timer\", {name: this.props.name, row: this.row, col: this.col});\n  }\n\n  resetTimer() {\n    this.props.socket.emit(\"reset timer\", {name: this.props.name, row: this.row, col: this.col});\n  }\n\n  getInfo() {\n    if (this.props.type === \"timer\") {\n      return (\n        <div data-row={this.row} data-col={this.col}>\n          {this.state.time}\n          <div>\n            <button data-row={this.row} data-col={this.col}\n              className=\"timer-button\" type=\"button\" onClick={this.toggleTimer}>S/P</button>\n            <button data-row={this.row} data-col={this.col}\n              className=\"timer-button\" type=\"button\" onClick={this.resetTimer}>R</button>\n          </div>\n        </div>\n      );\n    } else {\n      return this.props.info;\n    }\n  }\n\n  render() {\n    return (\n      <div onClick={this.handleClick} data-row={this.row} data-col={this.col} draggable=\"true\" onDragOver={this.handleDragOver}\n        onDragStart={this.handleDrag} onDrop={this.handleDrop} className=\"grid-tile\" style={this.getStyle()}>\n        <div className=\"tile-title\" data-row={this.row} data-col={this.col}>\n          {this.props.title}\n        </div>\n        <div data-row={this.row} data-col={this.col}>\n          {this.getInfo()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tile\n"]},"metadata":{},"sourceType":"module"}