{"ast":null,"code":"import _classCallCheck from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ryan/Dropbox/tourneymap/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js\";\nimport React from 'react';\nimport Tile from './Tile.js';\nimport Menu from './Menu.js';\n\nvar Tourney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tourney, _React$Component);\n\n  function Tourney(props) {\n    var _this;\n\n    _classCallCheck(this, Tourney);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tourney).call(this, props));\n    _this.id = atob(props.id);\n    _this.createRow = _this.createRow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createMap = _this.createMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateMap = _this.updateMap.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateTile = _this.updateTile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.makeTile = _this.makeTile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.row = 0;\n    _this.col = 0;\n    _this.state = {\n      map: new Array(10).fill(new Array(18).fill(null)),\n      display: [],\n      menu: [\"\", \"\", \"\", \"\"]\n    };\n\n    _this.createMap();\n\n    props.socket.emit('get tourney', _this.id);\n    props.socket.on('load tourney', function (data) {\n      if (this.mounted) {\n        console.log(data);\n        this.updateMap(data.map);\n      }\n    }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Tourney, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"createMap\",\n    value: function createMap() {\n      var map = [];\n\n      for (var i = 0; i < 10; i++) {\n        map.push(this.createRow(i));\n      }\n\n      this.setState({\n        display: map\n      });\n      return map;\n    }\n  }, {\n    key: \"createRow\",\n    value: function createRow(n) {\n      var row = [];\n\n      for (var i = 0; i < 18; i++) {\n        row.push(React.createElement(Tile, {\n          row: n,\n          col: i,\n          click: this.handleClick,\n          drop: this.handleDrop,\n          key: i + 100 * n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n      }\n\n      var out = [];\n      out.push(React.createElement(\"div\", {\n        className: \"grid-row\",\n        key: 1000 * n,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, row));\n      return out;\n    }\n  }, {\n    key: \"updateMap\",\n    value: function updateMap(newMap) {\n      var copy = this.state.display.slice();\n\n      for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 18; j++) {\n          var type = newMap[i][j][0];\n          var title = newMap[i][j][1];\n          var info = newMap[i][j][2];\n          var highlight = newMap[i][j][3];\n          copy[i][j] = this.makeTile(i, j, type, title, info, highlight);\n        }\n      }\n\n      this.setState({\n        map: newMap,\n        display: copy\n      });\n    }\n  }, {\n    key: \"updateTile\",\n    value: function updateTile(row, col, type, title, info, highlight) {\n      var copy = this.state.map.slice();\n      var dcopy = this.state.display.slice();\n      dcopy[row][col] = this.makeTile(row, col, type, title, info, highlight);\n      copy[row][col] = [type, title, info, highlight];\n      this.setState({\n        map: copy,\n        display: dcopy\n      });\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(e) {\n      e.preventDefault();\n      var r1 = parseInt(e.dataTransfer.getData(\"row\"));\n      var c1 = parseInt(e.dataTransfer.getData(\"col\"));\n      var r2 = e.target.getAttribute(\"data-row\");\n      var c2 = e.target.getAttribute(\"data-col\");\n      var temp = this.state.map[r1][c1];\n      var copy = this.state.map.slice();\n      copy[r1][c1] = copy[r2][c2];\n      copy[r2][c2] = temp;\n      this.updateMap(copy);\n      console.log(copy);\n      this.setState({\n        map: copy\n      });\n      console.log(\"switched!\");\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      console.log(\"clicked!\");\n      console.log(e.target);\n      var row = e.target.getAttribute(\"data-row\");\n      var col = e.target.getAttribute(\"data-col\");\n      var vals = this.state.map[row][col];\n      this.setState({\n        menu: vals\n      });\n      this.row = row;\n      this.col = col;\n    }\n  }, {\n    key: \"makeTile\",\n    value: function makeTile(row, col, type, title, info, highlight) {\n      return React.createElement(Tile, {\n        row: row,\n        col: col,\n        type: type,\n        title: title,\n        click: this.handleClick,\n        info: info,\n        highlight: highlight,\n        drop: this.handleDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"tourney\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        name: this.id,\n        type: this.state.menu[0],\n        title: this.state.menu[1],\n        info: this.state.menu[1],\n        highlight: this.state.menu[2],\n        row: this.row,\n        col: this.col,\n        updateTile: this.updateTile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"tourney-display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tourney-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.display)));\n    }\n  }]);\n\n  return Tourney;\n}(React.Component);\n\nexport default Tourney;","map":{"version":3,"sources":["/Users/ryan/Dropbox/tourneymap/client/src/js/Tourney.js"],"names":["React","Tile","Menu","Tourney","props","id","atob","createRow","bind","createMap","updateMap","updateTile","makeTile","handleDrop","handleClick","row","col","state","map","Array","fill","display","menu","socket","emit","on","data","mounted","console","log","i","push","setState","n","out","newMap","copy","slice","j","type","title","info","highlight","dcopy","e","preventDefault","r1","parseInt","dataTransfer","getData","c1","r2","target","getAttribute","c2","temp","vals","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Tile from './Tile.js';\r\nimport Menu from './Menu.js';\r\n\r\nclass Tourney extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = atob(props.id);\r\n    this.createRow = this.createRow.bind(this);\r\n    this.createMap = this.createMap.bind(this);\r\n    this.updateMap = this.updateMap.bind(this);\r\n    this.updateTile = this.updateTile.bind(this);\r\n    this.makeTile = this.makeTile.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.row = 0;\r\n    this.col = 0;\r\n    this.state = {\r\n      map: new Array(10).fill(new Array(18).fill(null)),\r\n      display: [],\r\n      menu: [\"\", \"\", \"\", \"\"]\r\n    };\r\n\r\n    this.createMap();\r\n\r\n    props.socket.emit('get tourney', this.id);\r\n\r\n    props.socket.on('load tourney', function(data) {\r\n      if (this.mounted) {\r\n        console.log(data);\r\n        this.updateMap(data.map);\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  createMap() {\r\n    let map = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      map.push(this.createRow(i));\r\n    }\r\n    this.setState({display: map})\r\n    return map;\r\n  }\r\n\r\n  createRow(n) {\r\n    let row = [];\r\n    for (let i = 0; i < 18; i++) {\r\n      row.push(<Tile row={n} col={i} click={this.handleClick} drop={this.handleDrop} key={i + 100 * n} />);\r\n    }\r\n    let out = []\r\n    out.push(<div className=\"grid-row\" key={1000 * n}>{row}</div>);\r\n    return out;\r\n  }\r\n\r\n  updateMap(newMap) {\r\n    var copy = this.state.display.slice();\r\n    for (let i = 0; i < 10; i++) {\r\n      for (let j = 0; j < 18; j++) {\r\n        let type = newMap[i][j][0];\r\n        let title = newMap[i][j][1];\r\n        let info = newMap[i][j][2];\r\n        let highlight = newMap[i][j][3];\r\n        copy[i][j] = this.makeTile(i, j, type, title, info, highlight);\r\n      }\r\n    }\r\n    this.setState({map: newMap, display: copy});\r\n  }\r\n\r\n  updateTile(row, col, type, title, info, highlight) {\r\n    let copy = this.state.map.slice()\r\n    let dcopy = this.state.display.slice();\r\n    dcopy[row][col] = this.makeTile(row, col, type, title, info, highlight);\r\n    copy[row][col] = [type, title, info, highlight];\r\n    this.setState({map: copy, display: dcopy});\r\n  }\r\n\r\n  handleDrop(e) {\r\n    e.preventDefault();\r\n    let r1 = parseInt(e.dataTransfer.getData(\"row\"));\r\n    let c1 = parseInt(e.dataTransfer.getData(\"col\"));\r\n    let r2 = e.target.getAttribute(\"data-row\");\r\n    let c2 = e.target.getAttribute(\"data-col\");\r\n    let temp = this.state.map[r1][c1];\r\n    let copy = this.state.map.slice();\r\n    copy[r1][c1] = copy[r2][c2];\r\n    copy[r2][c2] = temp;\r\n    this.updateMap(copy);\r\n    console.log(copy);\r\n    this.setState({map: copy});\r\n    console.log(\"switched!\");\r\n  }\r\n\r\n  handleClick(e) {\r\n    console.log(\"clicked!\");\r\n    console.log(e.target);\r\n    let row = e.target.getAttribute(\"data-row\");\r\n    let col = e.target.getAttribute(\"data-col\");\r\n    let vals = this.state.map[row][col];\r\n    this.setState({menu: vals});\r\n    this.row = row;\r\n    this.col = col;\r\n  }\r\n\r\n  makeTile(row, col, type, title, info, highlight) {\r\n    return (\r\n      <Tile row={row} col={col} type={type} title={title} click={this.handleClick}\r\n        info={info} highlight={highlight} drop={this.handleDrop} />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tourney\">\r\n        <Menu name={this.id} type={this.state.menu[0]}\r\n          title={this.state.menu[1]} info={this.state.menu[1]} highlight={this.state.menu[2]}\r\n          row={this.row} col={this.col} updateTile={this.updateTile} />\r\n        <div className=\"tourney-display\">\r\n          <div className=\"tourney-grid\">{this.state.display}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tourney;\r\n"]},"metadata":{},"sourceType":"module"}