{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Dropbox\\\\tourneymap\\\\client\\\\src\\\\js\\\\Tile.js\";\nimport React from 'react';\n\nvar Tile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tile, _React$Component);\n\n  function Tile(props) {\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tile).call(this, props));\n    _this.row = props.row;\n    _this.col = props.col;\n    _this.handleClick = props.click;\n    _this.handleDrop = props.drop;\n    _this.handleDrag = _this.handleDrag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDragOver = _this.handleDragOver.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getStyle = _this.getStyle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getInfo = _this.getInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      time: 0\n    };\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"handleDrag\",\n    value: function handleDrag(e) {\n      e.dataTransfer.setData(\"row\", e.target.getAttribute(\"data-row\"));\n      e.dataTransfer.setData(\"col\", e.target.getAttribute(\"data-col\"));\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(e) {\n      e.preventDefault();\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      if (this.props.highlight === \"red\") {\n        return {\n          backgroundColor: \"#f44242\"\n        };\n      } else if (this.props.highlight === \"green\") {\n        return {\n          backgroundColor: \"#42f442\"\n        };\n      } else if (this.props.highlight === \"blue\") {\n        return {\n          backgroundColor: \"#427cf4\"\n        };\n      } else if (this.props.highlight === \"yellow\") {\n        return {\n          backgroundColor: \"#f4f442\"\n        };\n      } else if (this.props.highlight === \"orange\") {\n        return {\n          backgroundColor: \"#f47a42\"\n        };\n      }\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {}\n  }, {\n    key: \"getInfo\",\n    value: function getInfo() {\n      if (this.props.type === \"timer\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          onClick: this.startTimer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"S/P\"), React.createElement(\"button\", {\n          type: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"R\"), this.state.time);\n      } else {\n        return this.props.info;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        onClick: this.handleClick,\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        draggable: \"true\",\n        onDragOver: this.handleDragOver,\n        onDragStart: this.handleDrag,\n        onDrop: this.handleDrop,\n        className: \"grid-tile\",\n        style: this.getStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"tile-title\",\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        \"data-row\": this.row,\n        \"data-col\": this.col,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.getInfo()));\n    }\n  }]);\n\n  return Tile;\n}(React.Component);\n\nexport default Tile;","map":{"version":3,"sources":["C:\\Users\\Ryan\\Dropbox\\tourneymap\\client\\src\\js\\Tile.js"],"names":["React","Tile","props","row","col","handleClick","click","handleDrop","drop","handleDrag","bind","handleDragOver","getStyle","getInfo","startTimer","state","time","e","dataTransfer","setData","target","getAttribute","preventDefault","highlight","backgroundColor","type","info","title","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.row = props.row;\n    this.col = props.col;\n    this.handleClick = props.click;\n    this.handleDrop = props.drop;\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.getStyle = this.getStyle.bind(this);\n    this.getInfo = this.getInfo.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n\n    this.state = {\n      time: 0\n    };\n  }\n\n  handleDrag(e) {\n    e.dataTransfer.setData(\"row\", e.target.getAttribute(\"data-row\"));\n    e.dataTransfer.setData(\"col\", e.target.getAttribute(\"data-col\"));\n  }\n\n  handleDragOver(e) {\n    e.preventDefault();\n  }\n\n  getStyle() {\n    if (this.props.highlight === \"red\") {\n      return {\n        backgroundColor: \"#f44242\"\n      };\n    } else if (this.props.highlight === \"green\") {\n      return {\n        backgroundColor: \"#42f442\"\n      };\n    } else if (this.props.highlight === \"blue\") {\n      return {\n        backgroundColor: \"#427cf4\"\n      };\n    } else if (this.props.highlight === \"yellow\") {\n      return {\n        backgroundColor: \"#f4f442\"\n      };\n    } else if (this.props.highlight === \"orange\") {\n      return {\n        backgroundColor: \"#f47a42\"\n      };\n    }\n  }\n\n  startTimer() {\n\n  }\n\n  getInfo() {\n    if (this.props.type === \"timer\") {\n      return (\n        <div>\n          <button type=\"button\" onClick={this.startTimer}>S/P</button>\n          <button type=\"button\">R</button>\n          {this.state.time}\n        </div>\n      );\n    } else {\n      return this.props.info;\n    }\n  }\n\n  render() {\n    return (\n      <div onClick={this.handleClick} data-row={this.row} data-col={this.col} draggable=\"true\" onDragOver={this.handleDragOver}\n        onDragStart={this.handleDrag} onDrop={this.handleDrop} className=\"grid-tile\" style={this.getStyle()}>\n        <div className=\"tile-title\" data-row={this.row} data-col={this.col}>\n          {this.props.title}\n        </div>\n        <div data-row={this.row} data-col={this.col}>\n          {this.getInfo()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tile\n"]},"metadata":{},"sourceType":"module"}